New Project:  Maven project

Archetype Group id: 	org.glassfish.jersey.archetypes
Archetype Artifact id:	jersey-quickstart-webapp

Project info:
Group id: 	org.chase
Artifact id: 	REST-Messenger
Package: 	org.chase.messenger

Add Tomcat Server:  Add REST-Messenger
Run As: Server Application

************************************************
Update Web.xml

The url-pattern webapi will be used as a sub-path in:
http://localhost:8080/REST-Messenger/webapi/...

    <servlet>
        <servlet-name>Jersey Web Application</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>jersey.config.server.provider.packages</param-name>
            <param-value>org.chase.REST_Messenger</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>Jersey Web Application</servlet-name>
        <url-pattern>/webapi/*</url-pattern>
    </servlet-mapping>

************************************************

REST Client

Go to www.getpostman.com or the chrome web store and install postman REST Client

************************************************

Change response format to JSON

Open up POM.  uncomment the line dependency for JSON format support

After updating the POM, update it to include the libraries:
Right click on the project >> Maven >> Update Project

************************************************

Testing POST with POSTMAN

Change the Header to Content-Type
Change the Value  to application/json

************************************************

Content Negotiation
Need to update the @Produces annotation
Produces(value = { MediaType.APPLICATION_JSON, MediaType.TEXT_XML })

Header: Accept - tells the server what content type that the client needs
Header: Content-Type - tells the server what content type that the client is sending

XLM format
Header: Accept OR Content-Type
Value: text/xml OR application/json